version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - '5672:5672'
      - '15672:15672'

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 1s
      retries: 20
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

  web:
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - "8000:8000"
      - "8080:8080"
    command: ./web/scripts/startup.sh
    restart: on-failure
    env_file:
      - ./web/config/.env
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://0.0.0.0:8000/api/tech/liveness || exit 1
      interval: 5s
      timeout: 1s
      retries: 5

  consumer:
    build:
      dockerfile: Dockerfile
      context: .
    command: ./consumer/scripts/startup.sh
    restart: on-failure
    env_file:
      - ./consumer/config/.env
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
